<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gbif.checklistbank.service.mybatis.persistence.mapper.MultimediaMapper">

    <sql id="selectCommon">m.type, m.format, m.identifier, m."references", m.title, m.description, m.audience,
    m.created, m.creator, m.contributor, m.publisher, m.license, m.rights_holder</sql>
    <sql id="select">m.usage_fk AS usageKey, null AS sourceTaxonKey, s.citation as source,<include refid="selectCommon"/></sql>
    <sql id="selectNub">rel.nub_fk as usageKey, m.usage_fk as sourceTaxonKey,d.title as source,<include refid="selectCommon"/></sql>

  
  <sql id="from">media m
    LEFT JOIN citation s ON m.source_fk=s.id
  </sql>
  <sql id="fromNub">media m
    JOIN nub_rel rel ON m.usage_fk=rel.usage_fk
    <include refid="org.gbif.checklistbank.service.mybatis.persistence.mapper.Common.excludeRels"/>
    LEFT JOIN dataset d ON rel.dataset_key=d.key
  </sql>

  <sql id="page">LIMIT #{page.limit} OFFSET #{page.offset}</sql>

  <!--  A mapping to build a media -->
  <resultMap id="mediaResultMap" type="NameUsageMediaObject" autoMapping="true">
    <result property="taxonKey" column="usageKey"/>
    <result property="sourceTaxonKey" column="usage_fk"/>
  </resultMap>


  <!-- get all media items linked to one usage -->
  <select id="listByChecklistUsage" parameterType="map" resultMap="mediaResultMap">
    SELECT
    <include refid="select"/>
    FROM
    <include refid="from"/>
    WHERE m.usage_fk=#{key}
    ORDER BY m.id
    <include refid="page"/>
  </select>

  <!-- get all media items by nub usage -->
  <select id="listByNubUsage" parameterType="map" resultMap="mediaResultMap">
    SELECT m.usage_fk,
    <include refid="selectNub"/>
    FROM
    <include refid="fromNub"/>
    WHERE rel.nub_fk=#{key}
    ORDER BY m.id
    <include refid="page"/>
  </select>

  <!--  select all media of a dataset
Using a optimal fetchsize to enable low memory footprint while keeping good performance using a resulthandler
-->
  <select id="processDataset" parameterType="map" resultMap="mediaResultMap" fetchSize="10000"
          resultSetType="FORWARD_ONLY" resultOrdered="true">
    SELECT
    <choose>
      <when test="uuid.toString() == 'd7dddbf4-2cf0-4f39-9b2a-bb099caae36c'">
        <include refid="selectNub"/>
        FROM
        <include refid="fromNub"/>
      </when>
      <otherwise>
        <include refid="select"/>
        FROM
        <include refid="from"/>
        JOIN name_usage u ON u.id=m.usage_fk
        WHERE u.dataset_key=#{uuid,jdbcType=OTHER}
      </otherwise>
    </choose>
  </select>

  <delete id="deleteByUsage">
    DELETE FROM media
    WHERE usage_fk = #{key}
  </delete>

  <insert id="insert" parameterType="map" useGeneratedKeys="false">
    INSERT INTO media (usage_fk, type, format, identifier, "references", title, description, audience,
      created, creator, contributor, publisher, license, rights_holder, source_fk
    )
    VALUES (#{key}, #{obj.type}::media_type, #{obj.format}, #{obj.identifier}, #{obj.references}, #{obj.title}, #{obj.description}, #{obj.audience},
      #{obj.created}, #{obj.creator}, #{obj.contributor}, #{obj.publisher}, #{obj.license}, #{obj.rightsHolder}, #{sourceKey}
    )
  </insert>

</mapper>

